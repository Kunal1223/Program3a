//Q3. Design  a program for conversion to expression from one from to another from to another from( infix to postfix) demonstrate its working.


#include<stdio.h>
#include<ctype.h> //Add header file 

char stack[20];   //intialise stack array with size 20
int top=-1;        // set the value of top 

void push(char n)      //define the push function
{
stack[++top]=n;
}

char pop()               //define the push function
{
if(top==-1)          //check the condtion 
{
return 1;
}
else
{
return stack[top--];
}
}

int priority(char n)         //check the priority of the number 
{
if(n=='(')
return 0;
if(n=='+'||n=='-')
return 1;
if(n=='*'||n=='/')
return 2;
}

int main()
{
char exp[20];
char *e, n;
printf("Enter the expression :\n");       // Enter the expression for stack
scanf("%s" , exp);
printf("Postfix expression is :\n");
e=exp;

while(*e!='\0')             // start the while loop 
{
if(isalnum(*e))

printf("%c" , *e);

else if(*e=='(')

push(*e);

else if(*e==')')
{
while((n=pop())!='(')

printf("%c" , n);

}
else
{
while(priority(stack[top])>=priority(*e)) //check the priority of the top and expression

printf("%c" , pop());
push(*e);
}
e++;

}
while(top!=-1)        //while loop terminator
{
printf("%c" , pop());
}
return 0;
printf("\n");       //next line code 
}

